on:
  workflow_call:

jobs:
  reusable_rtmpack_build:
    name: Reusable RTM Pack Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codes
        uses: actions/checkout@v3

      - name: Setup JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 8
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Add permission to Gradle wrapper
        run: chmod +x gradlew

      - name: Build with Gradle
        id: build_with_gradle
        run: ./gradlew build

      - name: Upload artifact
        if: steps.build_with_gradle.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: Artifact
          path: ./build/libs/*
          retention-days: 30

      - name: Delete old CI release
        id: delete_old_ci_release
        if: steps.build_with_gradle.outcome == 'success' && contains(github.ref, github.event.repository.default_branch)
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: 0
          delete_tag_pattern: ci_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new CI release
        if: steps.delete_old_ci_release.outcome == 'success' && contains(github.ref, github.event.repository.default_branch)
        uses: softprops/action-gh-release@v0.1.15
        with:
          name: CI release
          tag_name: ci_release
          body: ${{ format('From [`{0}`]({1}) ({2})', github.event.head_commit.message, github.event.head_commit.url, github.sha) }}
          files: ./build/libs/*
          fail_on_unmatched_files: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts to the outside server
        if: steps.build_with_gradle.outcome == 'success' && contains(github.ref, github.event.repository.default_branch)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo apt -y install gridsite-clients
          for file in ./build/libs/*
          do
          curl -T "$file" -X PUT -H "Authorization: Bearer $GITHUB_TOKEN" https://kotatsu.siro256.dev/${GITHUB_REPOSITORY_OWNER}/${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}/$(urlencode $(echo $file | sed -r 's/^.*\/(.*)$/\1/')) --globoff
          done